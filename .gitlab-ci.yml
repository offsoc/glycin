variables:
  # Clone test-images
  GIT_SUBMODULE_STRATEGY: recursive
  RUST_BACKTRACE: "full"

.install_dependencies:
  before_script:
    - apt update
    - apt install -y git curl meson pkg-config gobject-introspection gi-docgen valac libgirepository1.0-dev python3-gi build-essential liblcms2-dev gettext clang mold bubblewrap libseccomp-dev

    - git clone https://github.com/libjxl/libjxl.git --recursive --shallow-submodules
    - apt-get install -y clang cmake pkg-config libbrotli-dev
    - export CC=clang CXX=clang++
    - cd libjxl
    - mkdir build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF ..
    - cmake --build . -- -j$(nproc)
    - cmake --install .
    - cd ../..

    - echo "deb https://deb.debian.org/debian/ testing main" >> /etc/apt/sources.list
    - apt-get update
    - apt-get install -y libheif-dev libgtk-4-dev libcairo2-dev meson

    # Update fontcache for SVGs
    - fc-cache
  artifacts:
    when: always
    paths:
      - tests/failures
      - builddir/meson-logs

test-x86_64:
  image: rust:1.76-bookworm
  extends: .install_dependencies
  interruptible: true
  script:
    - export LD_LIBRARY_PATH=/usr/local/lib/x86_64-linux-gnu/
    # Skip isolated install for tests to test usual installation scenario
    - meson setup -Dprofile=dev -Dpython_tests=true -Dtest_skip_install=true -Dcapi_docs=true --prefix=/usr builddir
    - meson install -C builddir
    - meson test -vC builddir
    - mv builddir/libglycin/libglycin-1 c-api
  artifacts:
    paths:
      - c-api

test-i386:
  # Use hash to force i386, lookup "MANIFEST DIGEST" here <https://hub.docker.com/r/i386/rust/tags>
  image: rust@sha256:d21d21f6e7baa3e203257b0cf4de5827be3e877f853d2ef16b6ae5a2747e342c
  extends: .install_dependencies
  interruptible: true
  # As long as 32-bit CI is so unstable
  allow_failure: true
  script:
    - export LD_LIBRARY_PATH=/usr/local/lib/i386-linux-gnu/
    - apt-get install -y ninja-build
    - meson setup -Dprofile=dev  -Dpython_tests=true -Dtest_skip_install=true -Dtest_skip_ext=avif --prefix=/usr builddir
    - meson install -C builddir
    - meson test -vC builddir

test-aarch64:
  image: rust:1.76-bookworm
  tags:
    - aarch64
  extends: .install_dependencies
  interruptible: true
  script:
    - export LD_LIBRARY_PATH=/usr/local/lib/aarch64-linux-gnu/
    - meson setup -Dprofile=dev -Dpython_tests=true -Dtest_skip_install=true --prefix=/usr builddir
    - meson install -C builddir
    - meson test -vC builddir


cargo-semver-checks:
  image: rust
  extends: .install_dependencies
  interruptible: true
  script:
    - apt install cmake -y
    - cargo install cargo-semver-checks --locked
    - cargo semver-checks

cargo-fmt:
  image: rust
  interruptible: true
  script:
    - rustup component add rustfmt
    - cargo fmt --check

cargo-deny:
  image: rust
  interruptible: true
  script:
    - cargo install cargo-deny --locked
    - cargo deny check

pages:
  stage: deploy
  dependencies:
    - test-x86_64
  script:
    - mkdir public
    - mv c-api public
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
